"Professional services",
"Wholesale Trade") ) %>%
ggplot(aes(year, TGstock, color = country)) +
geom_line()+
facet_wrap(~sector)+ #scales = "free"
scale_y_continuous(labels = scales::percent)+
theme_minimal()+
labs(title= "Tasa de ganancia (sin rotación) de inversiones de EEUU", subtitle = "América del Sur")+
theme(legend.position = "bottom",
legend.title = element_blank(),
legend.text = element_text(size = axis_size+6),
axis.text.x = element_text(angle = 45, size= axis_size+6),
axis.text.y = element_text(size= axis_size+6),
axis.title  = element_blank() ,
strip.text = element_text(size=strip_size+5))+
scale_color_brewer(palette="Paired")
ggsave("./results/bea/majority_owned_nonbank/tg/tg_sa_2.png", width = 15, height=10)
data %>%
filter( Continent %in% c("South America") ) %>%
filter( !sector %in% c("Finance without depository",
"Finance and insurance",
"Professional services",
"Wholesale Trade") ) %>%
ggplot(aes(year, TG, color = country)) +
geom_line()+
facet_wrap(~sector)+ #scales = "free"
scale_y_continuous(labels = scales::percent)+
theme_minimal()+
labs(title= "Tasa de ganancia (con rotación) de inversiones de EEUU", subtitle = "América del Sur")+
theme(legend.position = "bottom",
legend.title = element_blank(),
legend.text = element_text(size = axis_size+6),
axis.text.x = element_text(angle = 45, size= axis_size+6),
axis.text.y = element_text(size= axis_size+6),
axis.title  = element_blank() ,
strip.text = element_text(size=strip_size+5))+
scale_color_brewer(palette="Paired")
ggsave("./results/bea/majority_owned_nonbank/tg/tg_sa_3.png", width = 15, height=10)
data %>%
filter( Continent %in% c("South America") | country %in% c("All Countries Total",
"European Union") ) %>%
ggplot(aes(year, TGstock, color = country)) +
geom_line()+
facet_wrap(~sector, scales = "free")+
scale_y_continuous(labels = scales::percent)+
theme_minimal()+
labs(title= "Tasa de ganancia (sin rotación) de inversiones de EEUU", subtitle = "América del Sur, Europa y total paises")+
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.x = element_text(angle = 45, size= 5),
axis.text.y = element_text(size= 5),
axis.title  = element_blank() ,
strip.text = element_text(size=10))+
scale_color_brewer(palette="Paired")
ggsave("./results/bea/majority_owned_nonbank/tg/tg_sa_eu_all.png", width = 15, height=10)
data %>%
filter( Continent %in% c("South America") | country %in% c("All Countries Total",
"European Union") ) %>%
ggplot(aes(year, TG, color = country)) +
geom_line()+
facet_wrap(~sector, scales = "free")+
scale_y_continuous(labels = scales::percent)+
theme_minimal()+
labs(title= "Tasa de ganancia (con rotación) de inversiones de EEUU", subtitle = "América del Sur, Europa y total paises")+
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.x = element_text(angle = 45, size= 5),
axis.text.y = element_text(size= 5),
axis.title  = element_blank() ,
strip.text = element_text(size=10))+
scale_color_brewer(palette="Paired")
ggsave("./results/bea/majority_owned_nonbank/tg/tg_sa_eu_all_1.png", width = 15, height=10)
data %>%
filter( country %in% c("South America", "European Union", "All Countries Total") ) %>%
group_by(country, sector) %>%
summarise(TGstock = mean(TGstock, na.rm=T) ,
PT = mean(PT, na.rm=T)) %>%
ggplot(aes(country, TGstock, fill = country)) +
geom_col(position = "dodge")+
facet_wrap(~sector, scales = "free")+
scale_y_continuous(labels = scales::percent_format(accuracy = 1L))+
theme_minimal()+
labs(title= "Tasa de ganancia (sin rotación) de inversiones de EEUU", subtitle = "América del Sur, Europa y total países (promedio 1999-2019)")+
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size= 8),
axis.title  = element_blank() ,
strip.text = element_text(size=5))+
scale_fill_manual(values=wes_palette(n=3, name="Royal2"))
ggsave("./results/bea/majority_owned_nonbank/tg/tg_eu_sa_all_avg.png")
data %>%
filter( country %in% c("South America", "European Union", "All Countries Total") ) %>%
group_by(country, sector) %>%
summarise(TG = mean(TG, na.rm=T) ,
PT = mean(PT, na.rm=T)) %>%
ggplot(aes(country, TG, fill = country)) +
geom_col(position = "dodge")+
facet_wrap(~sector, scales = "free")+
scale_y_continuous(labels = scales::percent_format(accuracy = 1L))+
theme_minimal()+
labs(title= "Tasa de ganancia (con rotación) de inversiones de EEUU", subtitle = "América del Sur, Europa y total países (promedio 1999-2019)")+
theme(legend.position = "bottom",
legend.title = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size= 8),
axis.title  = element_blank() ,
strip.text = element_text(size=5))+
scale_fill_manual(values=wes_palette(n=3, name="Royal2"))
ggsave("./results/bea/majority_owned_nonbank/tg/tg_eu_sa_all_avg_1.png")
melted_data %>%
filter(variable %in% c('r_1') )
melted_data %>%
filter(variable %in% c('r_1') & sector == "Manufacturing")
sectors
#rotacion manufacturing
melted_data %>%
filter(variable %in% c('r_1') & sector == "Total Manufacturing") %>%
ggplot(aes(x = year, y = value, color = sector)) +
geom_point(size = 0.3) +
facet_wrap(~variable,
labeller = labeller(variable =
c("r_1" = "r = net_income / Kcca",
"r_2" = "r =total_sales / Kcca")),
) +
labs(title = "Rotación. Distintas estimaciones")
melted_data %>%
filter(variable %in% c('r_1') & sector == "Total Manufacturing")
#rotacion manufacturing
melted_data %>%
filter(variable %in% c('r_1') & sector == "Total Manufacturing") %>%
ggplot(aes(x = year, y = value, color = country)) +
geom_point(size = 0.3) +
labs(title = "Rotación. Distintas estimaciones")
#rotacion manufacturing
melted_data %>%
filter(variable %in% c('r_1') & sector == "Total Manufacturing") %>%
ggplot(aes(x = year, y = value, color = country)) +
geom_point(size = 0.3) +
labs(title = "Rotación. Distintas estimaciones")+
theme(legend.position = 'none')
#rotacion manufacturing
melted_data %>%
filter(variable %in% c('r_1') & sector == "Total Manufacturing") %>%
ggplot(aes(x = year, y = value, color = country)) +
geom_point(size = 0.3) +
labs(title = "Rotación. Distintas estimaciones")+
theme(legend.position = 'none')
#rotacion manufacturing
melted_data %>%
filter(variable %in% c('r_1') & sector == "Total Manufacturing") %>%
ggplot(aes(x = year, y = value, color = country)) +
geom_point(size = 0.3) +
labs(title = "Rotación Manufacturing")+
theme(legend.position = 'none')
ggsave("./results/bea/majority_owned_nonbank/rotacion_manufacturings.png", width = 10, height = 6) # Adjust width and height
library(tidyverse)
library(ggplot2)
library(wesanderson)
library(RColorBrewer )
library(readxl)
library(lubridate)
library(scales)
library(viridis)
# setwd("C:/Archivos/datos/bea/codigos/majority_owned/")
# setwd("C:/Documents/data/bea/codigos/majority_owned/")
generar_indice <- function(serie,fecha, fecha_base){
valor_base <- serie[which(fecha==fecha_base)]
# Check if valor_base is empty
if (length(valor_base) == 0) {
warning("No matching date found for fecha_base. Returning NA.")
return(NA)
}
return (serie/valor_base)
}
results_path = './results/bea/majority_owned_nonbank/'
#params
title_size=40
text_size= 30
axis_size= 5
strip_size= 6
data <- read.csv("./results/bea/majority_owned_nonbank/data_majority_owned_nonbank_procesado.csv")
tcp_df <- read.csv('./results/indice_tcp.csv')
# Create a vector of unique sectors
sectors <- unique(data$sector)
# ISO Codes
isocodes<- read_excel("./data/ocde/34107835.xls")  %>%
select('CODE','country'=  'Country')
# PPI
## PPI benchmark
ppi <- read.csv("./data/ocde/DP_LIVE_27112023180609408.csv") %>%
filter(SUBJECT == 'TOT_MKT' , FREQUENCY == 'A', MEASURE == 'IDX2015') %>%
mutate(fecha = parse_date_time(TIME, orders = "y"),
fecha = ymd(fecha),
TIME = as.numeric(TIME)) %>%
group_by(LOCATION) %>%
# mutate(ppi_97 = generar_indice(Value, 'fecha', "1997-01-01"))
mutate(ppi_99 = generar_indice(serie=Value, fecha=TIME, fecha_base=1999))
# PPI
## PPI ARG
ppi_arg <- read_csv('./data/arg/ppi_arg.csv') %>%
mutate(ppi_99 = generar_indice(ppi_04, year, 1999))
# Productivity (PT)
data_prod <- data %>%
select(c(sector, country, Continent , year,value_added, employment, PT)) %>%
filter(PT > 0 &  employment > 0 ) %>%
arrange(desc(PT)) #    arrange(PT)
## Brecha de productividad
data_prod <-  data_prod %>%
left_join(isocodes, by = 'country') %>%
left_join(ppi %>%
select(country = 'LOCATION',
year = 'TIME',
ppi_99),
by = c('CODE'='country', 'year'='year')
)
# Print the countries with NA in CODE
na_codes <- data_prod %>% filter(is.na(CODE))
print(unique(na_codes$country))
df_manuf <- data_prod %>%
filter(sector == "Total Manufacturing"  )
df_manuf_arg <- df_manuf %>%
arrange(year)%>%
filter(CODE == 'ARG') %>%
left_join(tcp_df %>%
select(year, TCP_1),
by= 'year')  %>%
select(-ppi_99) %>%
left_join(ppi_arg %>%
select(year, ppi_99),
by= 'year') %>%
mutate(ipt_arg_99 = PT / ppi_99 ,
ipt_arg_99_index =  generar_indice(ipt_arg_99, year, 1999)) %>%
select(year, country, PT_arg=PT,  ppi_arg_99=ppi_99, ipt_arg_99, ipt_arg_99_index)
df_manuf_eu <- df_manuf %>%
filter(Continent == 'Europe') %>% #, country!= 'Austria') %>%
filter(!is.na(ppi_99))  %>%
mutate(ipt_bench_99 = PT/ppi_99) %>%
group_by(country) %>%
arrange(year)%>%
mutate(ipt_bench_99_index =  generar_indice(ipt_bench_99, year, 1999)) %>%
ungroup() %>%
select(year, country, PT_bench=PT, ppi_bench_99=ppi_99, ipt_bench_99, ipt_bench_99_index)
df_manuf_benchmark <- df_manuf %>%
# filter(Continent != '')
filter(Continent == 'Europe' , year == 1999) %>%
select(year, country, PT_bench_base = PT) %>%
left_join( df_manuf_arg %>%
filter(year == 1999) %>%
left_join(tcp_df %>%
select(year, TCP_1),
by= 'year') %>%
select(year, PT_arg_base = PT_arg, TCP_1),
by = 'year' ) %>%
mutate(brecha_anio_base = (PT_arg_base/TCP_1)/PT_bench_base )
df_manuf_brecha <- df_manuf_arg %>%
select(-country) %>%
left_join(df_manuf_eu,
by='year') %>%
left_join(df_manuf_benchmark %>%
select(year, country, brecha_anio_base ),
by=c('year', 'country'))
#SAVE
write.table(df_manuf_brecha,
'./results/bea/majority_owned_nonbank/brecha_productividad_manufacturing.csv',
row.names = F
# , dec = ','
#  ,sep = ';'
)
## PLOTS
df<- read.csv('./results/bea/majority_owned_nonbank/productivity_gap.csv') %>%
select(year,country, brecha_calculada   )
colores_personalizados <- c("#1f78b4", "#33a02c", "#e31a1c", "#ff7f00", "#6a3d9a", "#a6cee3", "#b2df8a", "#fb9a99", "#fdbf6f", "#cab2d6", "#ffff99", "#636363", "#b15928")
# Crea el gráfico de línea con la paleta de colores personalizada
df %>%
# filter(! country %in% c("Hungary" , "Poland", "Portugal")) %>%
filter( country %in% c( "France", "Germany")) %>%
ggplot( aes(x = year, y = brecha_calculada, color = country)) +
geom_line() +
scale_color_manual(values = colores_personalizados) +
scale_y_continuous(labels = percent_format(),
, breaks = seq(0, 3, by = 0.2)) +  # Configura el eje y como porcentaje
theme_minimal()
ggsave('./results/bea/majority_owned_nonbank/productivity_gap_eu_sel.png')
summary(df)
glimpse(tcp_df)
library(tidyverse)
library(readxl)
library(lubridate)
# setwd("C:/Archivos/datos/bea/codigos/majority_owned/")
# setwd("C:/Documents/data/bea/codigos/majority_owned/")
generar_indice <- function(serie,fecha, fecha_base){
valor_base <- serie[which(fecha==fecha_base)]
# Check if valor_base is empty
if (length(valor_base) == 0) {
warning("No matching date found for fecha_base. Returning NA.")
return(NA)
}
return (serie/valor_base)
}
results_path = './results/bea/majority_owned_nonbank/'
#params
title_size=40
text_size= 30
axis_size= 5
strip_size= 6
data <- read.csv("./results/bea/majority_owned_nonbank/data_majority_owned_nonbank_procesado.csv")
tcp_df <- read.csv('./results/indice_tcp.csv')
# Create a vector of unique sectors
sectors <- unique(data$sector)
# ISO Codes
isocodes<- read_excel("./data/ocde/34107835.xls")  %>%
select('CODE','country'=  'Country')
# PPI
## PPI benchmark
ppi <- read.csv("./data/ocde/DP_LIVE_27112023180609408.csv") %>%
filter(SUBJECT == 'TOT_MKT' , FREQUENCY == 'A', MEASURE == 'IDX2015') %>%
mutate(fecha = parse_date_time(TIME, orders = "y"),
fecha = ymd(fecha),
TIME = as.numeric(TIME)) %>%
group_by(LOCATION) %>%
# mutate(ppi_97 = generar_indice(Value, 'fecha', "1997-01-01"))
mutate(ppi_99 = generar_indice(serie=Value, fecha=TIME, fecha_base=1999))
# PPI
## PPI ARG
ppi_arg <- read_csv('./data/arg/ppi_arg.csv') %>%
mutate(ppi_99 = generar_indice(ppi_04, year, 1999))
# Productivity (PT)
data_prod <- data %>%
select(c(sector, country, Continent , year,value_added, employment, PT)) %>%
filter(PT > 0 &  employment > 0 ) %>%
arrange(desc(PT)) #    arrange(PT)
## Brecha de productividad
data_prod <-  data_prod %>%
left_join(isocodes, by = 'country') %>%
left_join(ppi %>%
select(country = 'LOCATION',
year = 'TIME',
ppi_99),
by = c('CODE'='country', 'year'='year')
)
# Print the countries with NA in CODE
na_codes <- data_prod %>% filter(is.na(CODE))
print(unique(na_codes$country))
df_manuf <- data_prod %>%
filter(sector == "Total Manufacturing"  )
df_manuf_arg <- df_manuf %>%
arrange(year)%>%
filter(CODE == 'ARG') %>%
left_join(tcp_df %>%
select(year, TCC,  TCP_1),
by= 'year')  %>%
select(-ppi_99) %>%
left_join(ppi_arg %>%
select(year, ppi_99),
by= 'year') %>%
mutate(ipt_arg_99 = (PT*TCC) / ppi_99 ,
ipt_arg_99_index =  generar_indice(ipt_arg_99, year, 1999)) %>%
select(year, country, PT_arg=PT,  ppi_arg_99=ppi_99, ipt_arg_99, ipt_arg_99_index)
df_manuf_eu <- df_manuf %>%
filter(Continent == 'Europe') %>% #, country!= 'Austria') %>%
filter(!is.na(ppi_99))  %>%
mutate(ipt_bench_99 = PT/ppi_99) %>%
group_by(country) %>%
arrange(year)%>%
mutate(ipt_bench_99_index =  generar_indice(ipt_bench_99, year, 1999)) %>%
ungroup() %>%
select(year, country, PT_bench=PT, ppi_bench_99=ppi_99, ipt_bench_99, ipt_bench_99_index)
df_manuf_benchmark <- df_manuf %>%
# filter(Continent != '')
filter(Continent == 'Europe' , year == 1999) %>%
select(year, country, PT_bench_base = PT) %>%
left_join( df_manuf_arg %>%
filter(year == 1999) %>%
left_join(tcp_df %>%
select(year, TCP_1),
by= 'year') %>%
select(year, PT_arg_base = PT_arg, TCP_1),
by = 'year' ) %>%
mutate(brecha_anio_base = (PT_arg_base/TCP_1)/PT_bench_base )
df_manuf_brecha <- df_manuf_arg %>%
select(-country) %>%
left_join(df_manuf_eu,
by='year') %>%
left_join(df_manuf_benchmark %>%
select(year, country, brecha_anio_base ),
by=c('year', 'country'))
#SAVE
write.table(df_manuf_brecha,
'./results/bea/majority_owned_nonbank/brecha_productividad_manufacturing.csv',
row.names = F
# , dec = ','
#  ,sep = ';'
)
library(scales)
library(viridis)
library(tidyverse)
library(ggplot2)
# library(RColorBrewer )
# library(wesanderson)
df<- read.csv('./results/bea/majority_owned_nonbank/productivity_gap.csv') %>%
select(year,country, brecha_calculada   )
colores_personalizados <- c("#1f78b4", "#33a02c", "#e31a1c", "#ff7f00", "#6a3d9a", "#a6cee3", "#b2df8a", "#fb9a99", "#fdbf6f", "#cab2d6", "#ffff99", "#636363", "#b15928")
# Crea el gráfico de línea con la paleta de colores personalizada
df %>%
# filter(! country %in% c("Hungary" , "Poland", "Portugal")) %>%
# filter( country %in% c( "France", "Germany")) %>%
ggplot( aes(x = year, y = brecha_calculada, color = country)) +
geom_line() +
scale_color_manual(values = colores_personalizados) +
scale_y_continuous(labels = percent_format(),
, breaks = seq(0, 3, by = 0.2)) +  # Configura el eje y como porcentaje
theme_minimal()
ggsave('./results/bea/majority_owned_nonbank/productivity_gap_eu.png')
# Crea el gráfico de línea con la paleta de colores personalizada
df %>%
# filter(! country %in% c("Hungary" , "Poland", "Portugal")) %>%
filter( country %in% c( "France", "Germany")) %>%
ggplot( aes(x = year, y = brecha_calculada, color = country)) +
geom_line() +
scale_color_manual(values = colores_personalizados) +
scale_y_continuous(labels = percent_format(),
, breaks = seq(0, 3, by = 0.2)) +  # Configura el eje y como porcentaje
theme_minimal()
ggsave('./results/bea/majority_owned_nonbank/productivity_gap_eu_sel.png')
# Crea el gráfico de línea con la paleta de colores personalizada
df %>%
# filter(! country %in% c("Hungary" , "Poland", "Portugal")) %>%
filter( country %in% c( "France", "Germany")) %>%
ggplot( aes(x = year, y = brecha_calculada, color = country)) +
geom_line() +
scale_color_manual(values = colores_personalizados) +
scale_y_continuous(labels = percent_format(),
, breaks = seq(0, 3, by = 0.1)) +  # Configura el eje y como porcentaje
theme_minimal()
# Crea el gráfico de línea con la paleta de colores personalizada
df %>%
# filter(! country %in% c("Hungary" , "Poland", "Portugal")) %>%
filter( country %in% c( "France", "Germany")) %>%
ggplot( aes(x = year, y = brecha_calculada, color = country)) +
geom_line() +
scale_color_manual(values = colores_personalizados) +
scale_y_continuous(labels = percent_format(),
, breaks = seq(0, 3, by = 0.1)) +  # Configura el eje y como porcentaje
theme_minimal()
# Crea el gráfico de línea con la paleta de colores personalizada
df %>%
# filter(! country %in% c("Hungary" , "Poland", "Portugal")) %>%
filter( country %in% c( "France", "Germany")) %>%
ggplot( aes(x = year, y = brecha_calculada, color = country)) +
geom_line() +
scale_color_manual(values = colores_personalizados) +
scale_y_continuous(labels = percent_format(),
, breaks = seq(0, 3, by = 0.1)) +  # Configura el eje y como porcentaje
theme_minimal()
ggsave('./results/bea/majority_owned_nonbank/productivity_gap_eu_sel.png')
library(tidyverse)
library(readxl)
library(lubridate)
source( functions)
source("./src/functions.R")
library(tidyverse)
library(readxl)
library(lubridate)
source("./src/functions.R")
#directory
results_path = './results/bea/majority_owned_nonbank/'
#plots params
title_size=40
text_size= 30
axis_size= 5
strip_size= 6
# load data
data <- read.csv("./results/bea/majority_owned_nonbank/data_majority_owned_nonbank_procesado.csv")
tcp_df <- read.csv('./results/indice_tcp.csv')
# Create a vector of unique sectors
sectors <- unique(data$sector)
# ISO Codes
isocodes<- read_excel("./data/ocde/34107835.xls")  %>%
select('CODE','country'=  'Country')
# PPI
## PPI benchmark
ppi <- read.csv("./data/ocde/DP_LIVE_27112023180609408.csv") %>%
filter(SUBJECT == 'TOT_MKT' , FREQUENCY == 'A', MEASURE == 'IDX2015') %>%
mutate(fecha = parse_date_time(TIME, orders = "y"),
fecha = ymd(fecha),
TIME = as.numeric(TIME)) %>%
group_by(LOCATION) %>%
# mutate(ppi_97 = generar_indice(Value, 'fecha', "1997-01-01"))
mutate(ppi_99 = generar_indice(serie=Value, fecha=TIME, fecha_base=1999))
# PPI
## PPI ARG
ppi_arg <- read_csv('./data/arg/ppi_arg.csv') %>%
mutate(ppi_99 = generar_indice(ppi_04, year, 1999))
# Productivity (PT)
data_prod <- data %>%
select(c(sector, country, Continent , year,value_added, employment, PT)) %>%
filter(PT > 0 &  employment > 0 ) %>%
arrange(desc(PT)) #    arrange(PT)
## Brecha de productividad
data_prod <-  data_prod %>%
left_join(isocodes, by = 'country') %>%
left_join(ppi %>%
select(country = 'LOCATION',
year = 'TIME',
ppi_99),
by = c('CODE'='country', 'year'='year')
)
# Print the countries with NA in CODE
na_codes <- data_prod %>% filter(is.na(CODE))
print(unique(na_codes$country))
sectors
